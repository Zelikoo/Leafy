import 'package:flutter/foundation.dart';
import 'package:flutter_facebook_auth/flutter_facebook_auth.dart';
import 'package:http/http.dart' as http;

/// Classe qui g√®re l'authentification Facebook
class FacebookAuthService {
  /// Connexion via Facebook
  Future<Map<String, dynamic>?> signInWithFacebook() async {
    try {
      // √âtape 1 : D√©marre le flux de connexion
      final LoginResult result = await FacebookAuth.instance.login(
        permissions: ['email', 'public_profile'],
      );

      switch (result.status) {
        case LoginStatus.success:
          // √âtape 2 : R√©cup√®re le token Facebook
          final AccessToken accessToken = result.accessToken!;
          debugPrint('‚úÖ Facebook Access Token: ${accessToken.tokenString}');

          // √âtape 3 : Optionnel ‚Äî R√©cup√®re les infos de l‚Äôutilisateur
          final userData = await FacebookAuth.instance.getUserData(
            fields: "email,name,picture.width(200)",
          );
          debugPrint('üë§ Facebook user data: $userData');

          // √âtape 4 : Envoie le token au backend pour cr√©er une session
          await _sendTokenToBackend(accessToken.tokenString);

          return userData;

        case LoginStatus.cancelled:
          debugPrint('‚ö†Ô∏è Connexion Facebook annul√©e par l‚Äôutilisateur.');
          return null;

        case LoginStatus.failed:
          debugPrint('‚ùå Erreur Facebook: ${result.message}');
          return null;

        default:
          debugPrint('‚ùå Statut inconnu: ${result.status}');
          return null;
      }
    } catch (e) {
      debugPrint('Erreur lors de la connexion Facebook: $e');
    }
  }

  /// D√©connexion Facebook
  Future<Map<String, dynamic>?> signOutFromFacebook() async {
    await FacebookAuth.instance.logOut();
    debugPrint('üö™ D√©connect√© de Facebook');
  }

  /// Exemple d‚Äôenvoi du token au backend
  Future<void> _sendTokenToBackend(String token) async {
    try {
      final response = await http.post(
        Uri.parse('https://ton-backend.com/api/auth/facebook'),
        body: {'token': token},
      );

      if (response.statusCode == 200) {
        debugPrint('‚úÖ Utilisateur authentifi√© via Facebook');
        // üëâ ici tu peux stocker le JWT re√ßu dans les pr√©f√©rences locales
      } else {
        debugPrint('‚ùå Erreur backend Facebook: ${response.body}');
      }
    } catch (e) {
      debugPrint('‚ùå Erreur requ√™te backend Facebook: $e');
    }
  }
}
